---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    goharbor.io/deploy-engine: Kustomization
    goharbor.io/deploy-mode: cluster
    goharbor.io/operator-version: v1.0.0
  name: minio-operator
  namespace: kube-repo
spec:
  replicas: 1
  selector:
    matchLabels:
      name: minio-operator
  template:
    metadata:
      annotations:
        goharbor.io/deploy-engine: Kustomization
        goharbor.io/deploy-mode: cluster
        goharbor.io/operator-version: v1.0.0
      labels:
        name: minio-operator
    spec:
      containers:
        - image: minio/k8s-operator:v3.0.13
          imagePullPolicy: IfNotPresent
          name: minio-operator
          resources:
            requests:
              memory: 256Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
      serviceAccountName: minio-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    goharbor.io/deploy-engine: Kustomization
    goharbor.io/deploy-mode: cluster
    goharbor.io/operator-version: v1.0.0
  labels:
    app: redisoperator
  name: redisoperator
  namespace: kube-repo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redisoperator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        goharbor.io/deploy-engine: Kustomization
        goharbor.io/deploy-mode: cluster
        goharbor.io/operator-version: v1.0.0
      labels:
        app: redisoperator
    spec:
      containers:
        - image: quay.io/spotahome/redis-operator:v1.0.0
          imagePullPolicy: IfNotPresent
          name: app
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
      restartPolicy: Always
      serviceAccountName: redisoperator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    goharbor.io/deploy-engine: Kustomization
    goharbor.io/deploy-mode: cluster
    goharbor.io/operator-version: v1.0.0
  name: postgres-operator
  namespace: kube-repo
spec:
  replicas: 1
  selector:
    matchLabels:
      name: postgres-operator
  template:
    metadata:
      annotations:
        goharbor.io/deploy-engine: Kustomization
        goharbor.io/deploy-mode: cluster
        goharbor.io/operator-version: v1.0.0
      labels:
        name: postgres-operator
    spec:
      containers:
        - env:
            - name: CONFIG_MAP_NAME
              value: postgres-operator
          image: registry.opensource.zalan.do/acid/postgres-operator:v1.5.0
          imagePullPolicy: IfNotPresent
          name: postgres-operator
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 250Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
      serviceAccountName: postgres-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    cache.goharbor.io/version: v1.0.0
    database.goharbor.io/version: v1.5.0
    storage.goharbor.io/version: v3.0.13
  labels:
    control-plane: harbor-operator
  name: harbor-operator
  namespace: kube-repo
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: harbor-operator
  template:
    metadata:
      annotations:
        goharbor.io/deploy-engine: Kustomization
        goharbor.io/deploy-mode: cluster
        goharbor.io/operator-version: v1.0.0
      labels:
        control-plane: harbor-operator
    spec:
      containers:
        - args:
            - --enable-leader-election
            - --metrics-addr=127.0.0.1:8080
          command:
            - /manager
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: goharbor/harbor-operator:dev_develop
          livenessProbe:
            httpGet:
              path: /healthz
              port: ready
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 5000
              name: ready
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: ready
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 1
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
            - mountPath: /etc/harbor-operator/templates
              name: configuration-templates
              readOnly: true
      securityContext:
        runAsUser: 65532
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
        - configMap:
            name: config-template
          name: configuration-templates
---

apiVersion: v1
kind: Service
metadata:
  annotations:
    goharbor.io/deploy-engine: Kustomization
    goharbor.io/deploy-mode: cluster
    goharbor.io/operator-version: v1.0.0
  name: postgres-operator
  namespace: kube-repo
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    name: postgres-operator
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    goharbor.io/deploy-engine: Kustomization
    goharbor.io/deploy-mode: cluster
    goharbor.io/operator-version: v1.0.0
  labels:
    name: minio-operator
  name: operator
  namespace: kube-repo
spec:
  ports:
    - name: http
      port: 4222
    - name: https
      port: 4233
  selector:
    name: minio-operator
  type: ClusterIP
---